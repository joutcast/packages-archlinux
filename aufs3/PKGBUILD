# Contributor: Paul Mattal <pjmattal@elys.com>
# Maintainer: Calimero <calimeroteknik@free.fr>

_kernel=3.10

# Set to whatever the tree of your aufs-friendly kernel is, and set the right dependency.
#_kernver="${_kernel}-ARCH"   # for modified core kernel
#depends=('aufs_friendly')

_kernver="${_kernel}-aufs_friendly"   # for aufs_friendly branded kernel
depends=('linux-aufs_friendly')


pkgname=aufs3
pkgver=3.10_20131104
pkgrel=1
pkgdesc="Another UnionFS implementation"
arch=('i686' 'x86_64')
url="http://aufs.sourceforge.net/"
license=('GPL2')
replaces=('aufs' 'aufs2')
conflicts=('aufs2')
makedepends=('git')
install='aufs3.install'
options=('!makeflags' '!strip')
source=("${pkgname}::git://git.code.sf.net/p/aufs/aufs3-standalone#branch=aufs${_kernel}")
md5sums=('SKIP')

pkgver() {
  cd "${pkgname}"
  echo "${_kernel}_$(sed -n '/AUFS_VERSION/s/^.*-\([0-9]*\)"$/\1/p' include/uapi/linux/aufs_type.h)"
}

build() {
  cd "${srcdir}/${pkgname}"
  sed -i 's|CONFIG_AUFS_HNOTIFY =.*|CONFIG_AUFS_HNOTIFY = y|' \
     config.mk
  sed -i 's|CONFIG_AUFS_HFSNOTIFY =.*|CONFIG_AUFS_HFSNOTIFY = y|' \
     config.mk
  sed -i 's|CONFIG_AUFS_EXPORT =.*|CONFIG_AUFS_EXPORT = y|' \
     config.mk
  sed -i 's|CONFIG_AUFS_SHWH =.*|CONFIG_AUFS_SHWH = y|' \
     config.mk
  sed -i 's|CONFIG_AUFS_BDEV_LOOP =.*|CONFIG_AUFS_BDEV_LOOP = y|' \
     config.mk
  sed -i 's|CONFIG_AUFS_BR_RAMFS =.*|CONFIG_AUFS_BR_RAMFS = y|' \
     config.mk
  sed -i 's|CONFIG_AUFS_DEBUG =.*|CONFIG_AUFS_DEBUG =|' \
     config.mk
  if [ "${CARCH}" = "x86_64" ]; then
    inot64=" y"
  else
    inot64=""
  fi
  sed -i "s|CONFIG_AUFS_INO_T_64 =.*|CONFIG_AUFS_INO_T_64 =${inot64}|" \
     config.mk
  # build, sed fixes are from gentoo portage build
  sed -i "s:aufs.ko usr/include/linux/aufs_type.h:aufs.ko:g" Makefile
  sed -i "s:__user::g" include/uapi/linux/aufs_type.h
  ln -s "/usr/src/linux-$(</usr/lib/modules/extramodules-${_kernver}/version)/include/linux/mount.h" fs/mount.h
  make KDIR="/usr/src/linux-$(</usr/lib/modules/extramodules-${_kernver}/version)"
}

package() {
  cd "${srcdir}/${pkgname}"

  install -D -m644 fs/aufs/aufs.ko \
    "${pkgdir}/usr/lib/modules/extramodules-${_kernver}/aufs.ko"
    #"${pkgdir}/usr/lib/modules/${_kernver}/kernel/fs/aufs/aufs.ko"

  # tweak the install script for the right kernel version
  sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" "${startdir}/aufs3.install"

  # install include file
  install -D -m 644 include/uapi/linux/aufs_type.h "${pkgdir}/usr/include/linux/aufs_type.h"

  # gzip -9 the module
  find "${pkgdir}" -name '*.ko' -exec gzip -9 {} \;
}
